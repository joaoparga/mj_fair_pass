---
title: "02_2_create_vars"
format: html
editor: source
---

# Setup

```{r}
#| include: false
library(tidyverse)
library(sf)
library(data.table)
library(janitor)
library(fs)
library(cancensus)
library(tmap)
library(DataExplorer)
library(patchwork)
library(mapview)
```

```{r}
# data.table optimization
# details > https://jangorecki.gitlab.io/data.cube/library/data.table/html/datatable-optimize.html
options(datatable.optimize=Inf)
# notations
`%nin%` = Negate(`%in%`)

`%nlike%` = Negate(`%like%`)
```

# Read data

```{r readdata}
#| include: false
# montreal fsa
montreal_fsa <- sf::st_read("data/report/montreal_fsa_count.gpkg")
# montreal cd (ct)
montreal_cd_ct <- sf::st_read("data/report/montreal_cd_ct_count.gpkg")
# survey filtered data
survey_filter_cd <- sf::st_read("data/report/survey_filter_inside_cd.gpkg")
```

# CREATE VARS


## Survey

```{r}

```

```{r readtranslateddata}
df_translated_q45_21 <- data.table::fread("data/translated_q45_21.csv")
```

```{r jointranslateddata}
survey_filter_cd <- survey_filter_cd %>% 
  dplyr::left_join(df_translated_q45_21 %>% select(-q45_21_text), by = "v1")
```


```{r createvars}
pattern_vis_minority_q48 <- "Southeast Asian origins|South Asian origins|Northeast Asian origins|West Asian origins|Caribbean origins|Latin, Central and South American origins|African origins|Arabic origins/North African origins"

pattern_vis_minority_q48_28_text <- "Arabe d’Egypte|Egyptian|Kabyle|Lebanese|Libanais|Libanaise|Philippines"

survey_filter_cd <- survey_filter_cd %>% 
  mutate(
    # income midpoint
    income_midpoint = case_when(
      q31 == "Less than $15,000" ~ 15000/2
      , q31 == "$15,000 to $29,999 " ~ (15000 + 30000)/2
      , q31 == "$30,000 to $59,999" ~ (30000 + 60000)/2
      , q31 == "$60,000 to $89,999 " ~ (60000 + 90000)/2
      , q31 == "$90,000 to $119,999 " ~ (90000 + 120000)/2
      , q31 == "$120,000 to $149,999 " ~ (120000 + 150000)/2
      , q31 == "$150,000 to $179,999 " ~ (150000 + 180000)/2
      , q31 == "$180,000 to $209,999 " ~ (180000 + 210000)/2
      , q31 == "$210,000 or more" ~ 210000
      , .default = NA_integer_
    )
    # household size
    , household_size = case_when(
      q106 == "1" ~ 1
      , q106 == "2" ~ 2
      , q106 == "3" ~ 3
      , q106 == "4" ~ 4
      , q106 == "5" ~ 5
      , q106 == "6" ~ 6
      , q106 == "8" ~ 8
      , q106 == "10 or more" ~ 10
      , .default = NA_integer_
    )
    # https://www12.statcan.gc.ca/census-recensement/2021/ref/dict/tab/index-eng.cfm?ID=t2_4
    # before tax threshold
    , lim_threshold = case_when(
      household_size == 1L ~ 30401
      , household_size == 2L ~ 42993
      , household_size == 3L ~ 52655
      , household_size == 4L ~ 60801
      , household_size == 5L ~ 67978
      , household_size == 6L ~ 74466
      , household_size == 8L ~ 85987
      , household_size == 10L ~ 96136
      , .default = NA_integer_
    )
    # in lim
    # https://www12.statcan.gc.ca/census-recensement/2021/ref/dict/tab/index-eng.cfm?ID=t2_4
    , in_lim = case_when(
      income_midpoint < lim_threshold ~ "yes"
      , income_midpoint >= lim_threshold ~ "no"
      , .default = NA_character_
    )
    # gender
    , gender = as_factor(case_when(
      q41 == "Man" ~ "male"
      , q41 == "Woman" ~ "female"
      , q41 %in% c("Non-binary", "Another gender identity, please specify:") ~ 
        "other"
      , .default = NA_character_
    ))
    # age raw
    , age_raw = case_when(
      q40 == "1923 or earlier" ~ 2023L - 1923L
      ,q40 == "1930" ~ 2023L - 1930L
      ,q40 == "1935" ~ 2023L - 1935L
      ,q40 == "1937" ~ 2023L - 1937L
      ,q40 == "1938" ~ 2023L - 1938L
      ,q40 == "1939" ~ 2023L - 1939L
      ,q40 == "1940" ~ 2023L - 1940L
      ,q40 == "1941" ~ 2023L - 1941L
      ,q40 == "1942" ~ 2023L - 1942L
      ,q40 == "1943" ~ 2023L - 1943L
      ,q40 == "1944" ~ 2023L - 1944L
      ,q40 == "1945" ~ 2023L - 1945L
      ,q40 == "1946" ~ 2023L - 1946L
      ,q40 == "1947" ~ 2023L - 1947L
      ,q40 == "1948" ~ 2023L - 1948L
      ,q40 == "1949" ~ 2023L - 1949L
      ,q40 == "1950" ~ 2023L - 1950L
      ,q40 == "1951" ~ 2023L - 1951L
      ,q40 == "1952" ~ 2023L - 1952L
      ,q40 == "1953" ~ 2023L - 1953L
      ,q40 == "1954" ~ 2023L - 1954L
      ,q40 == "1955" ~ 2023L - 1955L
      ,q40 == "1956" ~ 2023L - 1956L
      ,q40 == "1957" ~ 2023L - 1957L
      ,q40 == "1958" ~ 2023L - 1958L
      ,q40 == "1959" ~ 2023L - 1959L
      ,q40 == "1960" ~ 2023L - 1960L
      ,q40 == "1961" ~ 2023L - 1961L
      ,q40 == "1962" ~ 2023L - 1962L
      ,q40 == "1963" ~ 2023L - 1963L
      ,q40 == "1964" ~ 2023L - 1964L
      ,q40 == "1965" ~ 2023L - 1965L
      ,q40 == "1966" ~ 2023L - 1966L
      ,q40 == "1967" ~ 2023L - 1967L
      ,q40 == "1968" ~ 2023L - 1968L
      ,q40 == "1969" ~ 2023L - 1969L
      ,q40 == "1970" ~ 2023L - 1970L
      ,q40 == "1971" ~ 2023L - 1971L
      ,q40 == "1972" ~ 2023L - 1972L
      ,q40 == "1973" ~ 2023L - 1973L
      ,q40 == "1974 or later" ~ 2023L - 1974L
      , .default = NA_integer_
    )
    # age corrected
    , age_corrected = case_when(
      # q4 == "50-64" & age_raw == 65L ~ 64L
        q4 == "50-64" & q40 == "1974 or later" ~ 50L
      , q4 == "65 and older" & q40 == "1974 or later" ~ 50L
      , q4 == "50-64" & q40 == "1958" ~ 64L
      , .default = age_raw
    )
    # age categories
    , age_groups_5 = case_when(
      age_corrected < 50L ~ "age_less_50"
      , age_corrected >= 50L & age_corrected <= 54L ~ "age_50_54"
      , age_corrected >= 55L & age_corrected <= 59L ~ "age_55_59"
      , age_corrected >= 60L & age_corrected <= 64L ~ "age_60_64"
      , age_corrected >= 65 ~ "age_65_over" 
      , .default = NA_character_
    )
    , age_groups_control_treat = case_when(
      age_corrected < 50L ~ "age_less_50"
      , age_corrected >= 50L & age_corrected <= 64L ~ "age_50_64"
      , age_corrected >= 65 ~ "age_65_over" 
      , q40 == "Prefer not to answer" & q4 == "50-64" ~ "age_50_64"
      , q40 == "Prefer not to answer" & q4 == "65 and older" ~ "age_65_over"
      , .default = NA_character_
    )
    # visible minority 
    # https://www23.statcan.gc.ca/imdb/p3Var.pl?Function=DECI&Id=257515
    , visible_minority = as_factor(case_when(
      stringr::str_detect(
        string = q48
        , pattern = pattern_vis_minority_q48
        ) |
        stringr::str_detect(
          string = q48_28_text
          , pattern_vis_minority_q48_28_text
          ) ~ "visible_minority"
      , stringr::str_detect(
        string = q48
        , pattern = "Native North American origins"
      ) ~ "native_origins"
      , stringr::str_detect(
        string = q48
        , pattern = "I prefer not to answer"
      ) ~ NA_character_
      , .default = "not_visible_minority"
    ))
    , educ_has_postsec = as_factor(case_when(
      str_detect(string = q43 , pattern = "College|CEGEP|Bachelor|Master") ~
        "yes"
      , str_detect(string = q43 , pattern = "Primary|High") ~
        "no"
      , T ~ NA_character_
    ))
    , vehicles_per_capita = case_when(
      q39 == "0" ~ 0
      , q39 == "1" ~ 1/household_size
      , q39 == "2" ~ 2/household_size
      , q39 == "3" ~ 3/household_size
      , q39 == "4+" ~ 4/household_size
      , .default = NA_integer_
    )
    , lone_household = as_factor(case_when(
      q42 == "" ~ "yes"
      , q42 == "Prefer not to answer" ~ NA_character_
      , .default = "no"
    ))
    , employment = as_factor(case_when(
      str_detect(string = q45, pattern = "Unemployed") ~ "Unemployed"
      , str_detect(string = q45, pattern = "part-time") ~ "Employed part-time"
      , str_detect(string = q45, pattern = "Retired") ~ "Retired"
      , str_detect(string = q45, pattern = "full-time") |
        str_detect(string = q45_21_trans, pattern = "Self-employed")
        ~ "Employed full-time"
      , str_detect(string = q45, pattern = "Prefer not to answer/I don’t know") ~ NA_character_
      , .default = "Other"
    ))
    , employed = as_factor(case_when(
      str_detect(string = q45, pattern = "(part|full)-time") |
        # double check later
        str_detect(string = q45_21_trans, pattern = "Self-employed|full-time|Work and retirement|Semi-retired") ~ "yes"
      , str_detect(string = q45, pattern = "Prefer not to answer/I don’t know") ~ NA_character_
      , .default = "no"
    ))
    , unemployed = as_factor(case_when(
      str_detect(string = q45, pattern = "Unemployed") ~ "Unemployed"
      , str_detect(string = q45, pattern = "Prefer not to answer/I don’t know") ~ NA_character_
      , .default = "Other"
    ))
    , immigrant = as_factor(case_when(
      q79 == "Born here " ~ "no"
      , q79 == "Prefer not to answer" ~ NA_character_
      , .default = "yes"
    ))
    , any_functional_limitation = as_factor(case_when(
      str_detect(string = q80, pattern = "No, I don’t have any") ~ "no"
      , str_detect(string = q80, pattern = "I prefer not to answer") ~ NA_character_
      , .default = "yes"
    ))
    , any_mobility_limitation = as_factor(case_when(
      str_detect(string = q80, pattern = "Mobility") ~ "yes"
      , str_detect(string = q80, pattern = "I prefer not to answer") ~ NA_character_
      , .default = "no"
    ))
    , firstnations_metis_inuit = as_factor(case_when(
      q47 == "No" ~ "no"
      , q47 == "Prefer not to answer" ~ NA_character_
      , .default = "yes"
    ))
    , transit_once_week_plus = as_factor(case_when(
      q3 %in% c("1-2 days a week"
                , "3-4 days a week"
                , "5-7 days a week") ~ "yes"
      , q3 == "Not Asked" ~ NA_character_
      , .default = "no"
    ))
    , transit_last_week = as_factor(case_when(
      str_detect(string = q21, pattern = "(B|b)us|rail|Metro|Paratransit") ~ "yes"
      , q21 == "" ~ NA_character_
      , .default = "no"
    ))
  )

```

```{r factorrelevel}

```


```{r codemissingsurvey}

```


## CT

* Visible minority
* LIM

*OBS.*: each demographic has its own total (for estimating the percentages).
*OBS.2*: denominator is the sum for the whole CD.


```{r}
# get total population sum
# cma_pop = sum(montreal_cma_ct$population, na.rm = T)


# sums
montreal_cd_ct <- montreal_cd_ct %>% 
  dplyr::mutate(
    # age
    age_50_64_tot = age_50_54_tot + age_55_59_tot + age_60_64_tot
    , age_50_64_mal = age_50_54_mal + age_55_59_mal + age_60_64_mal
    , age_50_64_fem = age_50_54_fem + age_55_59_fem + age_60_64_fem
  )

# total pop sum for each category
cd_pop_tot_age = sum(montreal_cd_ct$total_tot, na.rm = T)

cd_pop_tot_vis_minority = sum(montreal_cd_ct$tot_vis_minority_tot_parent
                              , na.rm = T)

cd_pop_tot_lim = sum(montreal_cd_ct$count_lim_tot_parent, na.rm = T)

# proportion
montreal_cd_ct <- montreal_cd_ct %>% 
  mutate(
    prop_age_50_64_tot = age_50_64_tot / cd_pop_tot_age
    , prop_age_65_over_tot = age_65_over_tot / cd_pop_tot_age
    , prop_vis_minority_tot = tot_vis_minority_tot / cd_pop_tot_vis_minority
    , prop_in_lim_tot = count_lim_tot_in_lim / cd_pop_tot_lim
  )
```



# Save data

```{r}
sf::st_write(montreal_cd_ct, "data/report/montreal_cd_ct_count.gpkg", append = F)
sf::st_write(montreal_fsa, "data/report/montreal_fsa_count.gpkg", append = F)
sf::st_write(survey_filter_cd_fsa, "data/report/survey_filter_inside_cd.gpkg",
             append = F)
```
